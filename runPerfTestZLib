export MOZ_DISABLE_CONTENT_SANDBOX=1

if [ -z "$1" ]; then 
	echo "Expected argument ./runPerfTest outputfile.txt"; 
	exit 1; 
fi

cd "$(dirname "$0")"

if [[ -f "$1" ]]; then
	echo "$1 already exists"; 
	exit 1; 
fi

Pl="64"

if [[ ! -z "$2" ]]; then
	if [[ "$2" == "32" ]]; then
		Pl="32"
	else
		echo "Unknown platform: $2"
		exit 1
	fi
fi
FFVersions=("static" "static_buffcopy" "nacl_cpp" "process_cpp")

for i in ${FFVersions[@]}; do
	if [[ ! -d "firefox_${Pl}bit_optdebug_${i}" ]]; then
		echo "Not all firefox versions found: firefox_${Pl}bit_optdebug_${i}";
		exit 1;
	fi
done

echo -n "Enter number of iterations:"
read iterationsToRun

echo "Starting. Make sure to "
echo "1. Disable scaling first with. sudo cpufreq-set -c 3 --min 2200MHz --max 2200MHz"
echo "2. Run the zlib testing server with node server.js"

# param: outputFile
# param: testName
function runTest(){
	rm -f ./testing/mozharness/build/local.json
	rm -f ./talos_output.txt
	#sync && echo 3 | sudo tee /proc/sys/vm/drop_caches
	sleep 5
	taskset -c 3 ./mach talos-test --activeTests $2 2>&1 | tee ./talos_output.txt
	cat ./testing/mozharness/build/local.json >> "$1"
	echo -e "\n" >> "$1"
	echo -e "\nTerminal Output\n" >> "$1"
	cat "./talos_output.txt" >> "$1"
	echo "\n=================================\n" >> "$1"
	rm ./talos_output.txt
}

for i in `seq 1 $iterationsToRun`
do

	echo "Round ${i}" >> "$1"
	echo "=========" >> "$1"

	for j in ${FFVersions[@]}; do
		sleep 2
		cp "./mozconfig${Pl}_${j}" ./mozconfig
		sleep 2
	
		echo -e "FFBuild-${j}\n" >> "$1"
		runTest "$1" "zlib_page_render"
		echo -e "\n---------------------\n" >> "$1"

	done
done

echo "Output results to $1"
cat "$1" | grep -E '(^FFBuild)|("name")|("value")|(Final JPEG_Time)|(Final PNG_Time)' | grep --invert-match "INFO -"
