export MOZ_DISABLE_CONTENT_SANDBOX=1

if [ -z "$1" ]; then 
	echo "Expected argument ./runPerfTest outputfile.txt"; 
	exit 1; 
fi

if [[ ! -d "firefox_32bit_optdebug_nacl" ]] || [[ ! -d "firefox_32bit_optdebug_nonnacl" ]] || [[ ! -d "firefox_32bit_optdebug_static" ]] || [[ ! -d "firefox_32bit_optdebug_stock" ]] || [[ ! -d "firefox_32bit_optdebug_stocknosimd" ]]; then
	echo "Not all firefox versions found";
	exit 1;
fi

#Get root
sudo echo "Starting. Make sure to disable scaling first with. sudo cpufreq-set -c 3 --min 2200MHz --max 2200MHz"

#param: outputfile
#param: logfile
function writeTimingLinesToOutput() {
	# Logs are in the format as given below
	#
	# stuff | 1,JPEG_Time,0xf7150598,10
	# stuff | 2,JPEG_Time,0xf7150598,33
	# stuff | 1,JPEG_Time,0xaaa,31
	# stuff | 2,JPEG_Time,0xaaa,40
	#
	# where the 4 comma separated columns are 
	# - invocation count for this thread
	# - const string "JPEG_Time"
	# - a unique string for each thread
	# - cumulative time spent in "timed" code
	#
	# We want the latest time for each thread i.e.
	#
	# stuff | 2,JPEG_Time,0xf7150598,33
	# stuff | 2,JPEG_Time,0xaaa,40


	ORIGINALDATA=$(cat "$2")
	DATATOFILTER=$(echo "$ORIGINALDATA" | grep -E "JPEG_Time" | grep -v "'TOPLINE'" | grep -o '|.*' | sed 's/| //')
	OIFS=$IFS
	IFS=,

	FNINVOCATIONS=0
	FNTIMESPENT=0
	while [ -n "$DATATOFILTER" ]
	do

		TOPLINE=$(echo "$DATATOFILTER" | sort -r -n | head -1)
		echo "JPEG_Time TOPLINE: $TOPLINE" >> "$1"
		read -ra PIECES <<<"$TOPLINE"
		FNINVOCATIONS=$((FNINVOCATIONS + PIECES[0]))
		FNTIMESPENT=$((FNTIMESPENT + PIECES[3]))
		DATATOFILTER=$(echo "$DATATOFILTER" | grep -v -E "${PIECES[2]}")
	done

	COMMASEPTIME=$(printf "%'.f\n" $((FNTIMESPENT / 25)))
	echo "Final JPEG_Time (for 1 run): inv=$((FNINVOCATIONS / 25)) time=$COMMASEPTIME" >> "$1"
	echo -e "\n" >> "$1"

	IFS=$OIFS
}

# param: outputFile
# param: testName
function runTest(){
	sync && echo 3 | sudo tee /proc/sys/vm/drop_caches
	sleep 5
	taskset -c 3 ./mach talos-test --activeTests $2 2>&1 | tee ./talos_output.txt
	cat /home/shr/Code/mozilla-release/testing/mozharness/build/local.json >> "$1"
        echo -e "\n" >> "$1"
	writeTimingLinesToOutput "$1" "./talos_output.txt"
	rm ./talos_output.txt
}

function loadSandboxedFirefox(){
	sleep 2
	mv firefox_32bit_optdebug_nacl firefox_32bit_optdebug
	sleep 2
}
function unloadSandboxedFirefox(){
	sleep 2
	mv firefox_32bit_optdebug firefox_32bit_optdebug_nacl
	sleep 2
}

function loadUnsandboxedFirefox(){
	sleep 2
	mv firefox_32bit_optdebug_nonnacl firefox_32bit_optdebug
	sleep 2	
}
function unloadUnsandboxedFirefox(){
	sleep 2
	mv firefox_32bit_optdebug firefox_32bit_optdebug_nonnacl
	sleep 2	
}

function loadStaticFirefox(){
	sleep 2
	mv firefox_32bit_optdebug_static firefox_32bit_optdebug
	sleep 2	
}
function unloadStaticFirefox(){
	sleep 2
	mv firefox_32bit_optdebug firefox_32bit_optdebug_static
	sleep 2	
}

function loadStaticNoSimdFirefox(){
	sleep 2
	mv firefox_32bit_optdebug_staticnosimd firefox_32bit_optdebug
	sleep 2	
}
function unloadStaticNoSimdFirefox(){
	sleep 2
	mv firefox_32bit_optdebug firefox_32bit_optdebug_staticnosimd
	sleep 2	
}

function loadStockFirefox(){
	sleep 2
	mv firefox_32bit_optdebug_stock firefox_32bit_optdebug
	sleep 2	
}
function unloadStockFirefox(){
	sleep 2
	mv firefox_32bit_optdebug firefox_32bit_optdebug_stock
	sleep 2	
}

function loadStockNoSimdFirefox(){
	sleep 2
	mv firefox_32bit_optdebug_stocknosimd firefox_32bit_optdebug
	sleep 2	
}
function unloadStockNoSimdFirefox(){
	sleep 2
	mv firefox_32bit_optdebug firefox_32bit_optdebug_stocknosimd
	sleep 2	
}
for i in 1 2
do

	loadSandboxedFirefox

	echo -e "FFBuild-NACL\n" >> "$1"
	runTest "$1" "jpeg_page_render"
	# runTest "$1" "jpeg_page_render_25"
	# runTest "$1" "jpeg_page_render_50"
	echo -e "\n---------------------\n" >> "$1"

	unloadSandboxedFirefox

	loadUnsandboxedFirefox

	echo -e "FFBuild-Non-NACL\n" >> "$1"
	runTest "$1" "jpeg_page_render"
	# runTest "$1" "jpeg_page_render_25"
	# runTest "$1" "jpeg_page_render_50"
	echo -e "\n---------------------\n" >> "$1"

	unloadUnsandboxedFirefox

	loadStaticFirefox

	echo -e "FFBuild-Static\n" >> "$1"
	runTest "$1" "jpeg_page_render"
	# runTest "$1" "jpeg_page_render_25"
	# runTest "$1" "jpeg_page_render_50"
	echo -e "\n---------------------\n" >> "$1"

	unloadStaticFirefox

	loadStaticNoSimdFirefox

	echo -e "FFBuild-Static-NoSimd\n" >> "$1"
	runTest "$1" "jpeg_page_render"
	# runTest "$1" "jpeg_page_render_25"
	# runTest "$1" "jpeg_page_render_50"
	echo -e "\n---------------------\n" >> "$1"

	unloadStaticNoSimdFirefox

	loadStockFirefox

	echo -e "FFBuild-Stock\n" >> "$1"
	runTest "$1" "jpeg_page_render"
	# runTest "$1" "jpeg_page_render_25"
	# runTest "$1" "jpeg_page_render_50"
	echo -e "\n---------------------\n" >> "$1"

	unloadStockFirefox

	loadStockNoSimdFirefox

	echo -e "FFBuild-Stock-NoSimd\n" >> "$1"
	runTest "$1" "jpeg_page_render"
	# runTest "$1" "jpeg_page_render_25"
	# runTest "$1" "jpeg_page_render_50"
	echo -e "\n---------------------\n" >> "$1"

	unloadStockNoSimdFirefox

done

echo "Output results to $1"
cat "$1" | grep -E "FFBuild|name|value|JPEG_Time"
