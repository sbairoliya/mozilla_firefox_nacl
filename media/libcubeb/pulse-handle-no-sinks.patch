From 2d2443f6c58346d114c7be4b7ad5e0f001ad12c0 Mon Sep 17 00:00:00 2001
From: Dan Glastonbury <dan.glastonbury@gmail.com>
Date: Mon, 9 Oct 2017 12:15:47 +1000
Subject: Bug 1399978 - Port cubeb_pulse.c fix for startup assert.

Ported pulse_audio only fix to stop cubeb asserting if the machine is
configured without any audio sinks.

MozReview-Commit-ID: ATaAfnJ6Yfa

diff --git a/media/libcubeb/src/cubeb_pulse.c b/media/libcubeb/src/cubeb_pulse.c
index 21f3a898..07a1717 100644
--- a/media/libcubeb/src/cubeb_pulse.c
+++ b/media/libcubeb/src/cubeb_pulse.c
@@ -653,7 +653,6 @@ pulse_init(cubeb ** context, char const * context_name)
     WRAP(pa_operation_unref)(o);
   }
   WRAP(pa_threaded_mainloop_unlock)(ctx->mainloop);
-  assert(ctx->default_sink_info);
 
   *context = ctx;
 
@@ -673,6 +672,9 @@ pulse_get_max_channel_count(cubeb * ctx, uint32_t * max_channels)
   (void)ctx;
   assert(ctx && max_channels);
 
+  if (!ctx->default_sink_info)
+    return CUBEB_ERROR;
+
   *max_channels = ctx->default_sink_info->channel_map.channels;
 
   return CUBEB_OK;
@@ -684,6 +686,9 @@ pulse_get_preferred_sample_rate(cubeb * ctx, uint32_t * rate)
   assert(ctx && rate);
   (void)ctx;
 
+  if (!ctx->default_sink_info)
+    return CUBEB_ERROR;
+
   *rate = ctx->default_sink_info->sample_spec.rate;
 
   return CUBEB_OK;
@@ -695,6 +700,9 @@ pulse_get_preferred_channel_layout(cubeb * ctx, cubeb_channel_layout * layout)
   assert(ctx && layout);
   (void)ctx;
 
+  if (!ctx->default_sink_info)
+    return CUBEB_ERROR;
+
   *layout = channel_map_to_layout(&ctx->default_sink_info->channel_map);
 
   return CUBEB_OK;
@@ -1077,6 +1085,7 @@ pulse_stream_set_volume(cubeb_stream * stm, float volume)
   pa_volume_t vol;
   pa_cvolume cvol;
   const pa_sample_spec * ss;
+  cubeb * ctx;
 
   if (!stm->output_stream) {
     return CUBEB_ERROR;
@@ -1086,7 +1095,9 @@ pulse_stream_set_volume(cubeb_stream * stm, float volume)
 
   /* if the pulse daemon is configured to use flat volumes,
    * apply our own gain instead of changing the input volume on the sink. */
-  if (stm->context->default_sink_info->flags & PA_SINK_FLAT_VOLUME) {
+  ctx = stm->context;
+  if (ctx->default_sink_info &&
+      (ctx->default_sink_info->flags & PA_SINK_FLAT_VOLUME)) {
     stm->volume = volume;
   } else {
     ss = WRAP(pa_stream_get_sample_spec)(stm->output_stream);
@@ -1096,16 +1107,16 @@ pulse_stream_set_volume(cubeb_stream * stm, float volume)
 
     index = WRAP(pa_stream_get_index)(stm->output_stream);
 
-    op = WRAP(pa_context_set_sink_input_volume)(stm->context->context,
+    op = WRAP(pa_context_set_sink_input_volume)(ctx->context,
                                                 index, &cvol, volume_success,
                                                 stm);
     if (op) {
-      operation_wait(stm->context, stm->output_stream, op);
+      operation_wait(ctx, stm->output_stream, op);
       WRAP(pa_operation_unref)(op);
     }
   }
 
-  WRAP(pa_threaded_mainloop_unlock)(stm->context->mainloop);
+  WRAP(pa_threaded_mainloop_unlock)(ctx->mainloop);
 
   return CUBEB_OK;
 }
@@ -1235,7 +1246,12 @@ pulse_sink_info_cb(pa_context * context, const pa_sink_info * info,
 
   (void)context;
 
-  if (eol || info == NULL)
+  if (eol) {
+    WRAP(pa_threaded_mainloop_signal)(list_data->context->mainloop, 0);
+    return;
+  }
+
+  if (info == NULL)
     return;
 
   device_id = info->name;
@@ -1274,8 +1290,6 @@ pulse_sink_info_cb(pa_context * context, const pa_sink_info * info,
   devinfo->latency_hi = 0;
 
   list_data->count += 1;
-
-  WRAP(pa_threaded_mainloop_signal)(list_data->context->mainloop, 0);
 }
 
 static cubeb_device_state
@@ -1304,8 +1318,10 @@ pulse_source_info_cb(pa_context * context, const pa_source_info * info,
 
   (void)context;
 
-  if (eol)
+  if (eol) {
+    WRAP(pa_threaded_mainloop_signal)(list_data->context->mainloop, 0);
     return;
+  }
 
   device_id = info->name;
   if (intern_device_id(list_data->context, &device_id) != CUBEB_OK) {
@@ -1343,7 +1359,6 @@ pulse_source_info_cb(pa_context * context, const pa_source_info * info,
   devinfo->latency_hi = 0;
 
   list_data->count += 1;
-  WRAP(pa_threaded_mainloop_signal)(list_data->context->mainloop, 0);
 }
 
 static void
@@ -1355,8 +1370,10 @@ pulse_server_info_cb(pa_context * c, const pa_server_info * i, void * userdata)
 
   free(list_data->default_sink_name);
   free(list_data->default_source_name);
-  list_data->default_sink_name = strdup(i->default_sink_name);
-  list_data->default_source_name = strdup(i->default_source_name);
+  if (i->default_sink_name)
+    list_data->default_sink_name = strdup(i->default_sink_name);
+  if (i->default_source_name)
+    list_data->default_source_name = strdup(i->default_source_name);
 
   WRAP(pa_threaded_mainloop_signal)(list_data->context->mainloop, 0);
 }
-- 
2.10.2

